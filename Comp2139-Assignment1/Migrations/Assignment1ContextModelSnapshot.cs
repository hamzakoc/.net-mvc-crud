// <auto-generated />
using System;
using Comp2139_Assignment1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Comp2139_Assignment1.Migrations
{
    [DbContext(typeof(Assignment1Context))]
    partial class Assignment1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Comp2139_Assignment1.Models.Countries", b =>
                {
                    b.Property<string>("CountriesID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountriesID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountriesID = "Afghanistan"
                        },
                        new
                        {
                            CountriesID = "Åland Islands"
                        },
                        new
                        {
                            CountriesID = "Albania"
                        },
                        new
                        {
                            CountriesID = "Algeria"
                        },
                        new
                        {
                            CountriesID = "American Samoa"
                        },
                        new
                        {
                            CountriesID = "Andorra"
                        },
                        new
                        {
                            CountriesID = "Angola"
                        },
                        new
                        {
                            CountriesID = "Anguilla"
                        },
                        new
                        {
                            CountriesID = "Antarctica"
                        },
                        new
                        {
                            CountriesID = "Antigua and Barbuda"
                        },
                        new
                        {
                            CountriesID = "Argentina"
                        },
                        new
                        {
                            CountriesID = "Armenia"
                        },
                        new
                        {
                            CountriesID = "Aruba"
                        },
                        new
                        {
                            CountriesID = "Australia"
                        },
                        new
                        {
                            CountriesID = "Austria"
                        },
                        new
                        {
                            CountriesID = "Azerbaijan"
                        },
                        new
                        {
                            CountriesID = "Bahamas"
                        },
                        new
                        {
                            CountriesID = "Bahrain"
                        },
                        new
                        {
                            CountriesID = "Bangladesh"
                        },
                        new
                        {
                            CountriesID = "Barbados"
                        },
                        new
                        {
                            CountriesID = "Belarus"
                        },
                        new
                        {
                            CountriesID = "Belgium"
                        },
                        new
                        {
                            CountriesID = "Belize"
                        },
                        new
                        {
                            CountriesID = "Benin"
                        },
                        new
                        {
                            CountriesID = "Bermuda"
                        },
                        new
                        {
                            CountriesID = "Bhutan"
                        },
                        new
                        {
                            CountriesID = "Bolivia"
                        },
                        new
                        {
                            CountriesID = "Bonaire, Sint Eustatius and Saba"
                        },
                        new
                        {
                            CountriesID = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            CountriesID = "Botswana"
                        },
                        new
                        {
                            CountriesID = "Bouvet Island"
                        },
                        new
                        {
                            CountriesID = "Brazil"
                        },
                        new
                        {
                            CountriesID = "British Indian Ocean Territory"
                        },
                        new
                        {
                            CountriesID = "Brunei Darussalam"
                        },
                        new
                        {
                            CountriesID = "Bulgaria"
                        },
                        new
                        {
                            CountriesID = "Burkina Faso"
                        },
                        new
                        {
                            CountriesID = "Burundi"
                        },
                        new
                        {
                            CountriesID = "Cambodia"
                        },
                        new
                        {
                            CountriesID = "Cameroon"
                        },
                        new
                        {
                            CountriesID = "Canada"
                        },
                        new
                        {
                            CountriesID = "Cape Verde"
                        },
                        new
                        {
                            CountriesID = "Cayman Islands"
                        },
                        new
                        {
                            CountriesID = "Central African Republic"
                        },
                        new
                        {
                            CountriesID = "Chad"
                        },
                        new
                        {
                            CountriesID = "Chile"
                        },
                        new
                        {
                            CountriesID = "China"
                        },
                        new
                        {
                            CountriesID = "Christmas Island"
                        },
                        new
                        {
                            CountriesID = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            CountriesID = "Colombia"
                        },
                        new
                        {
                            CountriesID = "Comoros"
                        },
                        new
                        {
                            CountriesID = "Congo, Republic of the (Brazzaville)"
                        },
                        new
                        {
                            CountriesID = "Congo, the Democratic Republic of the (Kinshasa)"
                        },
                        new
                        {
                            CountriesID = "Cook Islands"
                        },
                        new
                        {
                            CountriesID = "Costa Rica"
                        },
                        new
                        {
                            CountriesID = "Côte d'Ivoire, Republic of"
                        },
                        new
                        {
                            CountriesID = "Croatia"
                        },
                        new
                        {
                            CountriesID = "Cuba"
                        },
                        new
                        {
                            CountriesID = "Curaçao"
                        },
                        new
                        {
                            CountriesID = "Cyprus"
                        },
                        new
                        {
                            CountriesID = "Czech Republic"
                        },
                        new
                        {
                            CountriesID = "Denmark"
                        },
                        new
                        {
                            CountriesID = "Djibouti"
                        },
                        new
                        {
                            CountriesID = "Dominica"
                        },
                        new
                        {
                            CountriesID = "Dominican Republic"
                        },
                        new
                        {
                            CountriesID = "Ecuador"
                        },
                        new
                        {
                            CountriesID = "Egypt"
                        },
                        new
                        {
                            CountriesID = "El Salvador"
                        },
                        new
                        {
                            CountriesID = "Equatorial Guinea"
                        },
                        new
                        {
                            CountriesID = "Eritrea"
                        },
                        new
                        {
                            CountriesID = "Estonia"
                        },
                        new
                        {
                            CountriesID = "Ethiopia"
                        },
                        new
                        {
                            CountriesID = "Falkland Islands (Islas Malvinas)"
                        },
                        new
                        {
                            CountriesID = "Faroe Islands"
                        },
                        new
                        {
                            CountriesID = "Fiji"
                        },
                        new
                        {
                            CountriesID = "Finland"
                        },
                        new
                        {
                            CountriesID = "France"
                        },
                        new
                        {
                            CountriesID = "French Guiana"
                        },
                        new
                        {
                            CountriesID = "French Polynesia"
                        },
                        new
                        {
                            CountriesID = "French Southern and Antarctic Lands"
                        },
                        new
                        {
                            CountriesID = "Gabon"
                        },
                        new
                        {
                            CountriesID = "Gambia, The"
                        },
                        new
                        {
                            CountriesID = "Georgia"
                        },
                        new
                        {
                            CountriesID = "Germany"
                        },
                        new
                        {
                            CountriesID = "Ghana"
                        },
                        new
                        {
                            CountriesID = "Gibraltar"
                        },
                        new
                        {
                            CountriesID = "Greece"
                        },
                        new
                        {
                            CountriesID = "Greenland"
                        },
                        new
                        {
                            CountriesID = "Grenada"
                        },
                        new
                        {
                            CountriesID = "Guadeloupe"
                        },
                        new
                        {
                            CountriesID = "Guam"
                        },
                        new
                        {
                            CountriesID = "Guatemala"
                        },
                        new
                        {
                            CountriesID = "Guernsey"
                        },
                        new
                        {
                            CountriesID = "Guinea"
                        },
                        new
                        {
                            CountriesID = "Guinea-Bissau"
                        },
                        new
                        {
                            CountriesID = "Guyana"
                        },
                        new
                        {
                            CountriesID = "Haiti"
                        },
                        new
                        {
                            CountriesID = "Heard Island and McDonald Islands"
                        },
                        new
                        {
                            CountriesID = "Holy See (Vatican City)"
                        },
                        new
                        {
                            CountriesID = "Honduras"
                        },
                        new
                        {
                            CountriesID = "Hong Kong"
                        },
                        new
                        {
                            CountriesID = "Hungary"
                        },
                        new
                        {
                            CountriesID = "Iceland"
                        },
                        new
                        {
                            CountriesID = "India"
                        },
                        new
                        {
                            CountriesID = "Indonesia"
                        },
                        new
                        {
                            CountriesID = "Iran, Islamic Republic of"
                        },
                        new
                        {
                            CountriesID = "Iraq"
                        },
                        new
                        {
                            CountriesID = "Ireland"
                        },
                        new
                        {
                            CountriesID = "Isle of Man"
                        },
                        new
                        {
                            CountriesID = "Israel"
                        },
                        new
                        {
                            CountriesID = "Italy"
                        },
                        new
                        {
                            CountriesID = "Jamaica"
                        },
                        new
                        {
                            CountriesID = "Japan"
                        },
                        new
                        {
                            CountriesID = "Jersey"
                        },
                        new
                        {
                            CountriesID = "Jordan"
                        },
                        new
                        {
                            CountriesID = "Kazakhstan"
                        },
                        new
                        {
                            CountriesID = "Kenya"
                        },
                        new
                        {
                            CountriesID = "Kiribati"
                        },
                        new
                        {
                            CountriesID = "Korea, Democratic People's Republic of"
                        },
                        new
                        {
                            CountriesID = "Korea, Republic of"
                        },
                        new
                        {
                            CountriesID = "Kuwait"
                        },
                        new
                        {
                            CountriesID = "Kyrgyzstan"
                        },
                        new
                        {
                            CountriesID = "Laos"
                        },
                        new
                        {
                            CountriesID = "Latvia"
                        },
                        new
                        {
                            CountriesID = "Lebanon"
                        },
                        new
                        {
                            CountriesID = "Lesotho"
                        },
                        new
                        {
                            CountriesID = "Liberia"
                        },
                        new
                        {
                            CountriesID = "Libya"
                        },
                        new
                        {
                            CountriesID = "Liechtenstein"
                        },
                        new
                        {
                            CountriesID = "Lithuania"
                        },
                        new
                        {
                            CountriesID = "Luxembourg"
                        },
                        new
                        {
                            CountriesID = "Macao"
                        },
                        new
                        {
                            CountriesID = "Macedonia, Republic of"
                        },
                        new
                        {
                            CountriesID = "Madagascar"
                        },
                        new
                        {
                            CountriesID = "Malawi"
                        },
                        new
                        {
                            CountriesID = "Malaysia"
                        },
                        new
                        {
                            CountriesID = "Maldives"
                        },
                        new
                        {
                            CountriesID = "Mali"
                        },
                        new
                        {
                            CountriesID = "Malta"
                        },
                        new
                        {
                            CountriesID = "Marshall Islands"
                        },
                        new
                        {
                            CountriesID = "Martinique"
                        },
                        new
                        {
                            CountriesID = "Mauritania"
                        },
                        new
                        {
                            CountriesID = "Mauritius"
                        },
                        new
                        {
                            CountriesID = "Mayotte"
                        },
                        new
                        {
                            CountriesID = "Mexico"
                        },
                        new
                        {
                            CountriesID = "Micronesia, Federated States of"
                        },
                        new
                        {
                            CountriesID = "Moldova"
                        },
                        new
                        {
                            CountriesID = "Monaco"
                        },
                        new
                        {
                            CountriesID = "Mongolia"
                        },
                        new
                        {
                            CountriesID = "Montenegro"
                        },
                        new
                        {
                            CountriesID = "Montserrat"
                        },
                        new
                        {
                            CountriesID = "Morocco"
                        },
                        new
                        {
                            CountriesID = "Mozambique"
                        },
                        new
                        {
                            CountriesID = "Myanmar"
                        },
                        new
                        {
                            CountriesID = "Namibia"
                        },
                        new
                        {
                            CountriesID = "Nauru"
                        },
                        new
                        {
                            CountriesID = "Nepal"
                        },
                        new
                        {
                            CountriesID = "Netherlands"
                        },
                        new
                        {
                            CountriesID = "New Caledonia"
                        },
                        new
                        {
                            CountriesID = "New Zealand"
                        },
                        new
                        {
                            CountriesID = "Nicaragua"
                        },
                        new
                        {
                            CountriesID = "Niger"
                        },
                        new
                        {
                            CountriesID = "Nigeria"
                        },
                        new
                        {
                            CountriesID = "Niue"
                        },
                        new
                        {
                            CountriesID = "Norfolk Island"
                        },
                        new
                        {
                            CountriesID = "Northern Mariana Islands"
                        },
                        new
                        {
                            CountriesID = "Norway"
                        },
                        new
                        {
                            CountriesID = "Oman"
                        },
                        new
                        {
                            CountriesID = "Pakistan"
                        },
                        new
                        {
                            CountriesID = "Palau"
                        },
                        new
                        {
                            CountriesID = "Palestine, State of"
                        },
                        new
                        {
                            CountriesID = "Panama"
                        },
                        new
                        {
                            CountriesID = "Papua New Guinea"
                        },
                        new
                        {
                            CountriesID = "Paraguay"
                        },
                        new
                        {
                            CountriesID = "Peru"
                        },
                        new
                        {
                            CountriesID = "Philippines"
                        },
                        new
                        {
                            CountriesID = "Pitcairn"
                        },
                        new
                        {
                            CountriesID = "Poland"
                        },
                        new
                        {
                            CountriesID = "Portugal"
                        },
                        new
                        {
                            CountriesID = "Puerto Rico"
                        },
                        new
                        {
                            CountriesID = "Qatar"
                        },
                        new
                        {
                            CountriesID = "Réunion"
                        },
                        new
                        {
                            CountriesID = "Romania"
                        },
                        new
                        {
                            CountriesID = "Russian Federation"
                        },
                        new
                        {
                            CountriesID = "Rwanda"
                        },
                        new
                        {
                            CountriesID = "Saint Barthélemy"
                        },
                        new
                        {
                            CountriesID = "Saint Helena, Ascension and Tristan da Cunha"
                        },
                        new
                        {
                            CountriesID = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            CountriesID = "Saint Lucia"
                        },
                        new
                        {
                            CountriesID = "Saint Martin"
                        },
                        new
                        {
                            CountriesID = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            CountriesID = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            CountriesID = "Samoa"
                        },
                        new
                        {
                            CountriesID = "San Marino"
                        },
                        new
                        {
                            CountriesID = "Sao Tome and Principe"
                        },
                        new
                        {
                            CountriesID = "Saudi Arabia"
                        },
                        new
                        {
                            CountriesID = "Senegal"
                        },
                        new
                        {
                            CountriesID = "Serbia"
                        },
                        new
                        {
                            CountriesID = "Seychelles"
                        },
                        new
                        {
                            CountriesID = "Sierra Leone"
                        },
                        new
                        {
                            CountriesID = "Singapore"
                        },
                        new
                        {
                            CountriesID = "Sint Maarten (Dutch part)"
                        },
                        new
                        {
                            CountriesID = "Slovakia"
                        },
                        new
                        {
                            CountriesID = "Slovenia"
                        },
                        new
                        {
                            CountriesID = "Solomon Islands"
                        },
                        new
                        {
                            CountriesID = "Somalia"
                        },
                        new
                        {
                            CountriesID = "South Africa"
                        },
                        new
                        {
                            CountriesID = "South Georgia and South Sandwich Islands"
                        },
                        new
                        {
                            CountriesID = "South Sudan"
                        },
                        new
                        {
                            CountriesID = "Spain"
                        },
                        new
                        {
                            CountriesID = "Sri Lanka"
                        },
                        new
                        {
                            CountriesID = "Sudan"
                        },
                        new
                        {
                            CountriesID = "Suriname"
                        },
                        new
                        {
                            CountriesID = "Swaziland"
                        },
                        new
                        {
                            CountriesID = "Sweden"
                        },
                        new
                        {
                            CountriesID = "Switzerland"
                        },
                        new
                        {
                            CountriesID = "Syrian Arab Republic"
                        },
                        new
                        {
                            CountriesID = "Taiwan"
                        },
                        new
                        {
                            CountriesID = "Tajikistan"
                        },
                        new
                        {
                            CountriesID = "Tanzania, United Republic of"
                        },
                        new
                        {
                            CountriesID = "Thailand"
                        },
                        new
                        {
                            CountriesID = "Timor-Leste"
                        },
                        new
                        {
                            CountriesID = "Togo"
                        },
                        new
                        {
                            CountriesID = "Tokelau"
                        },
                        new
                        {
                            CountriesID = "Tonga"
                        },
                        new
                        {
                            CountriesID = "Trinidad and Tobago"
                        },
                        new
                        {
                            CountriesID = "Tunisia"
                        },
                        new
                        {
                            CountriesID = "Turkey"
                        },
                        new
                        {
                            CountriesID = "Turkmenistan"
                        },
                        new
                        {
                            CountriesID = "Turks and Caicos Islands"
                        },
                        new
                        {
                            CountriesID = "Tuvalu"
                        },
                        new
                        {
                            CountriesID = "Uganda"
                        },
                        new
                        {
                            CountriesID = "Ukraine"
                        },
                        new
                        {
                            CountriesID = "United Arab Emirates"
                        },
                        new
                        {
                            CountriesID = "United Kingdom"
                        },
                        new
                        {
                            CountriesID = "United States"
                        },
                        new
                        {
                            CountriesID = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            CountriesID = "Uruguay"
                        },
                        new
                        {
                            CountriesID = "Uzbekistan"
                        },
                        new
                        {
                            CountriesID = "Vanuatu"
                        },
                        new
                        {
                            CountriesID = "Venezuela, Bolivarian Republic of"
                        },
                        new
                        {
                            CountriesID = "Vietnam"
                        },
                        new
                        {
                            CountriesID = "Virgin Islands, British"
                        },
                        new
                        {
                            CountriesID = "Virgin Islands, U.S."
                        },
                        new
                        {
                            CountriesID = "Wallis and Futuna"
                        },
                        new
                        {
                            CountriesID = "Western Sahara"
                        },
                        new
                        {
                            CountriesID = "Yemen"
                        },
                        new
                        {
                            CountriesID = "Zambia"
                        },
                        new
                        {
                            CountriesID = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Customers", b =>
                {
                    b.Property<int>("CustomersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountriesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomersID");

                    b.HasIndex("CountriesID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomersID = 1,
                            City = "San Francisco",
                            Email = "kanthoni@pge.com",
                            FName = "Kaitlyn",
                            LName = "Anthoni"
                        },
                        new
                        {
                            CustomersID = 2,
                            City = "Washington",
                            Email = "ania@mm.nidc.com",
                            FName = "Ania",
                            LName = "Irvin"
                        },
                        new
                        {
                            CustomersID = 3,
                            City = "Mission Viejo",
                            Email = " ",
                            FName = "Gonzolo",
                            LName = "Keeton"
                        },
                        new
                        {
                            CustomersID = 4,
                            City = "Sacramento",
                            Email = "amauro@yahoo.org",
                            FName = "Anton",
                            LName = "Mauro"
                        },
                        new
                        {
                            CustomersID = 5,
                            City = "Fresno",
                            Email = "kmayte@fresno.ca.gov",
                            FName = "Kendall",
                            LName = "Mayte"
                        },
                        new
                        {
                            CustomersID = 6,
                            City = "Los Angles",
                            Email = "kenzie@mmma.jobtrak.com",
                            FName = "Kenzie",
                            LName = "Quinn"
                        },
                        new
                        {
                            CustomersID = 7,
                            City = "Fresno",
                            Email = "marvin@expedata.com",
                            FName = "Marvin",
                            LName = "Quintin"
                        });
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Incidents", b =>
                {
                    b.Property<int>("IncidentsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomersID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOpened")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.Property<int>("TechniciansID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentsID");

                    b.HasIndex("CustomersID");

                    b.HasIndex("ProductsID");

                    b.HasIndex("TechniciansID");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentsID = 1,
                            CustomersID = 5,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductsID = 4,
                            TechniciansID = 1,
                            Title = "Could not install"
                        },
                        new
                        {
                            IncidentsID = 2,
                            CustomersID = 3,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductsID = 1,
                            TechniciansID = 2,
                            Title = "Could not install"
                        },
                        new
                        {
                            IncidentsID = 3,
                            CustomersID = 2,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductsID = 3,
                            TechniciansID = 3,
                            Title = "Error importing data"
                        },
                        new
                        {
                            IncidentsID = 4,
                            CustomersID = 5,
                            DateClosed = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOpened = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProductsID = 2,
                            TechniciansID = 4,
                            Title = "Error launching program"
                        });
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Products", b =>
                {
                    b.Property<int>("ProductsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductsID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductsID = 1,
                            Code = "TRNY10",
                            Name = "Tournament Master 1.0",
                            Price = 4.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 2,
                            Code = "LEAG10",
                            Name = "Leaagur Scheduler 1.0",
                            Price = 4.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 3,
                            Code = "LEAGD10",
                            Name = "Leaagur Scheduler Deluxe1.0",
                            Price = 7.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 4,
                            Code = "DRAFT10",
                            Name = "Draft Manager 1.0",
                            Price = 4.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 5,
                            Code = "TEAM10",
                            Name = "Team Manager 1.0",
                            Price = 4.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 6,
                            Code = "TRNY20",
                            Name = "Tournament Master 2.0",
                            Price = 4.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 7,
                            Code = "DRAFT20",
                            Name = "Tournament Master 1.0",
                            Price = 5.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProductsID = 8,
                            Code = "TRNY10",
                            Name = "Draft Manager 2.0",
                            Price = 5.9900000000000002,
                            ReleaseDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Registrations", b =>
                {
                    b.Property<int>("RegistrationsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomersID")
                        .HasColumnType("int");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.HasKey("RegistrationsID");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Technicians", b =>
                {
                    b.Property<int>("TechniciansID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechniciansID");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechniciansID = 1,
                            Email = "alison@sportsprosoftware.com",
                            Name = "Alison Diaz",
                            Phone = "800-555-0443"
                        },
                        new
                        {
                            TechniciansID = 2,
                            Email = "awilson@sportsprosoftware.com",
                            Name = "Andrew Wilson",
                            Phone = "800-555-0449"
                        },
                        new
                        {
                            TechniciansID = 3,
                            Email = "gfiori@sportsprosoftware.com",
                            Name = "Gina Fiori",
                            Phone = "800-555-0459"
                        },
                        new
                        {
                            TechniciansID = 4,
                            Email = "gunter@sportsprosoftware.com",
                            Name = "Guunter Wendit",
                            Phone = "800-555-0400"
                        },
                        new
                        {
                            TechniciansID = 5,
                            Email = "alison@sportsprosoftware.com",
                            Name = "Jason Lee",
                            Phone = "800-555-0444"
                        });
                });

            modelBuilder.Entity("CustomersRegistrations", b =>
                {
                    b.Property<int>("CustomersID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationsID")
                        .HasColumnType("int");

                    b.HasKey("CustomersID", "RegistrationsID");

                    b.HasIndex("RegistrationsID");

                    b.ToTable("CustomersRegistrations");
                });

            modelBuilder.Entity("ProductsRegistrations", b =>
                {
                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationsID")
                        .HasColumnType("int");

                    b.HasKey("ProductsID", "RegistrationsID");

                    b.HasIndex("RegistrationsID");

                    b.ToTable("ProductsRegistrations");
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Customers", b =>
                {
                    b.HasOne("Comp2139_Assignment1.Models.Countries", "Countries")
                        .WithMany()
                        .HasForeignKey("CountriesID");

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("Comp2139_Assignment1.Models.Incidents", b =>
                {
                    b.HasOne("Comp2139_Assignment1.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Comp2139_Assignment1.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Comp2139_Assignment1.Models.Technicians", "Technicians")
                        .WithMany()
                        .HasForeignKey("TechniciansID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Products");

                    b.Navigation("Technicians");
                });

            modelBuilder.Entity("CustomersRegistrations", b =>
                {
                    b.HasOne("Comp2139_Assignment1.Models.Customers", null)
                        .WithMany()
                        .HasForeignKey("CustomersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Comp2139_Assignment1.Models.Registrations", null)
                        .WithMany()
                        .HasForeignKey("RegistrationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductsRegistrations", b =>
                {
                    b.HasOne("Comp2139_Assignment1.Models.Products", null)
                        .WithMany()
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Comp2139_Assignment1.Models.Registrations", null)
                        .WithMany()
                        .HasForeignKey("RegistrationsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
